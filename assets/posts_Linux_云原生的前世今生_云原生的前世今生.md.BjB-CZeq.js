import{_ as a,c as o,a2 as l,o as r}from"./chunks/framework.DDqBDuc9.js";const s="/assets/%E5%BE%AE%E6%9C%8D%E5%8A%A1.BYOnnmf0.webp",i="/assets/%E5%BE%AE%E6%9C%8D%E5%8A%A12.CGb36AbL.webp",t="/assets/lps_less.CMeCxKSj.jpg",n="/assets/lps_less2.D3-lNbln.jpg",c="/assets/lps_less3.DEEh65Dj.jpg",q=JSON.parse('{"title":"后端的业务需求(微服务的发展)","description":"","frontmatter":{},"headers":[],"relativePath":"posts/Linux/云原生的前世今生/云原生的前世今生.md","filePath":"posts/Linux/云原生的前世今生/云原生的前世今生.md"}'),h={name:"posts/Linux/云原生的前世今生/云原生的前世今生.md"};function p(d,e,u,b,k,m){return r(),o("div",null,e[0]||(e[0]=[l('<h1 id="后端的业务需求-微服务的发展" tabindex="-1">后端的业务需求(微服务的发展) <a class="header-anchor" href="#后端的业务需求-微服务的发展" aria-label="Permalink to &quot;后端的业务需求(微服务的发展)&quot;">​</a></h1><p><img src="'+s+'" alt=""></p><p><img src="'+i+'" alt=""></p><h2 id="关于分布式数据库" tabindex="-1">关于分布式数据库 <a class="header-anchor" href="#关于分布式数据库" aria-label="Permalink to &quot;关于分布式数据库&quot;">​</a></h2><h1 id="云原生的前世今生" tabindex="-1">云原生的前世今生 <a class="header-anchor" href="#云原生的前世今生" aria-label="Permalink to &quot;云原生的前世今生&quot;">​</a></h1><h2 id="服务器厂商提供的服务" tabindex="-1">服务器厂商提供的服务 <a class="header-anchor" href="#服务器厂商提供的服务" aria-label="Permalink to &quot;服务器厂商提供的服务&quot;">​</a></h2><ul><li>IaaS（Infrastructure as a Service） 基础设施</li><li>Pass(Platform as a Service) -&gt;severless</li><li>SaaS(Software-as-a-Service)</li></ul><p><img src="'+t+'" alt=""></p><p><img src="'+n+'" alt=""></p><p><img src="'+c+'" alt=""></p><h2 id="为了实现pass" tabindex="-1">为了实现PASS <a class="header-anchor" href="#为了实现pass" aria-label="Permalink to &quot;为了实现PASS&quot;">​</a></h2><ul><li><p>2010年 dotCloud 但随着大厂商（微软、谷歌、亚马逊等）杀入PaaS平台，dotCloud举步维艰。</p></li><li><p>2013年 的IT技术，AWS和openstack如日中天, 虚拟机以及公有云的资源账单(IAAS)</p></li><li><p>2013年 dotCloud公司决定开源自己的容器项目“Docker”</p></li><li><p>Docker崛起的时候CoreOS也是其中的一员，在容器生态圈中CoreOS的标签就是：专为容器设计的操作系统。作为互补，CoreOS+Docker曾经也是容器部署的明星套餐。CoreOS为Docker的推广和源码社区都做出了巨大的贡献。</p></li><li><p>2014 年随着Docker通过开发或者收购，逐步完善容器云平台的各个组件，准备打造Docker自己的生态圈以后，CoreOS发现docker想抛弃自己，docker的一系列布局与自己有直接竞争关系，因此CoreOS也愤怒的发布了另一个开源容器引擎Rocket简称rkt作为两家的分手宣言，至此两家分道扬镳！</p></li><li><p>Google公司秘而不宣的使用容器已经有十几年了，本想关键时候做杀手锏，没想到docker居然搞出了docker容器还开源了，且发展势头极其迅猛。Google坐不住了，担心自己的江湖地位受到挑战。于是财大气粗的Google就大力扶持docker的“反对派”阵营-CoreOS，kubernetes一经推出就原生支持rkt容器引擎，并且在2015年4月Google还给CoreOS投资了1200万美刀，而CoreOS也发布了Tectonic，成为首个支持企业版本kubernetes的公司。从此容器生态江湖分为两大阵营Google和Docker。</p></li></ul><h3 id="pass的理论优劣势" tabindex="-1">PASS的理论优劣势 <a class="header-anchor" href="#pass的理论优劣势" aria-label="Permalink to &quot;PASS的理论优劣势&quot;">​</a></h3><ul><li>省钱 服务器的效率10%左右</li><li>省力</li><li>日志, 个性化 目前解决方案都有, 但是有迁移成本</li></ul><h2 id="容器编排-战争打响" tabindex="-1">“容器编排”战争打响 <a class="header-anchor" href="#容器编排-战争打响" aria-label="Permalink to &quot;“容器编排”战争打响&quot;">​</a></h2><ul><li><p>2014年，当Google发现CoreOS在容器生态领域实在不是Docker的竞争对手之后，决定换道超车，于当年宣布推出kubernetes容器集群编排工具，并在2014年6月7日将初始版本代码提交到Github上完全开源，当年7 月 10 日微软、RedHat、IBM、Docker 加入Kubernetes 开源社区。</p></li><li><p>2014年的Docker公司雄心勃勃，于2014年底在DockerCon上发布了自己研发的“Docker原生”容器集群管理项目DockerSwarm，并想与kubernetes一较高下。Mesosphere公司的Mesos + Marathon（马拉松）的项目更是早期容器编排解决方案的领头羊，像是有3亿用户的Twitter以及苹果语音助手Siri就是使用mesos作为后端集群管理工具。</p></li><li><p>但由于kubernetes基于Google内部使用的容器集群管理系统Borg+Omega，在谷歌已经平稳运行了15年，Google将他们自己超大范围的技术经验带到了容器编排中，该填的坑早已经被谷歌的技术大神们填了，因此推出后不到三年横扫docker swarm和mesos marathon容器编排工具。</p></li><li><p>2017年10月17日，随着docker宣布支持kubernetes开始，其实容器编排的战争就已经结束了，整个行业已经聚焦到K8S家门前！截止2017年6月，据CNCF统计：K8S占据着77%的市场份额；docker swarm则只有21%，远远落后；第三名Mesos则是13%</p></li><li><p>2020.6 Kubelet1.2 中的 Docker 支持功能现已弃用(k8s不在维护, docker 自己维护)</p></li></ul><h2 id="ai-和边缘计算" tabindex="-1">AI 和边缘计算 <a class="header-anchor" href="#ai-和边缘计算" aria-label="Permalink to &quot;AI 和边缘计算&quot;">​</a></h2><h2 id="云栖大会" tabindex="-1">云栖大会 <a class="header-anchor" href="#云栖大会" aria-label="Permalink to &quot;云栖大会&quot;">​</a></h2><h3 id="介绍自己产品的东西" tabindex="-1">介绍自己产品的东西. <a class="header-anchor" href="#介绍自己产品的东西" aria-label="Permalink to &quot;介绍自己产品的东西.&quot;">​</a></h3><ul><li>介绍网易云等等软件的迁移</li></ul><h3 id="有很多已经落地的东西" tabindex="-1">有很多已经落地的东西 <a class="header-anchor" href="#有很多已经落地的东西" aria-label="Permalink to &quot;有很多已经落地的东西&quot;">​</a></h3><ul><li>液态金属打印pcb, 无人机电力检修, 软硬件结合, 国产芯片,超低温芯片制作,航空航天</li></ul><h3 id="为什么没有分布式数据库-polardb-hbase-mongodb" tabindex="-1">为什么没有分布式数据库(polardb, hbase, mongodb) <a class="header-anchor" href="#为什么没有分布式数据库-polardb-hbase-mongodb" aria-label="Permalink to &quot;为什么没有分布式数据库(polardb, hbase, mongodb)&quot;">​</a></h3><ul><li>Nosql</li><li>sql</li></ul><h3 id="sae-pass-对应的劣势" tabindex="-1">SAE(PASS)对应的劣势 <a class="header-anchor" href="#sae-pass-对应的劣势" aria-label="Permalink to &quot;SAE(PASS)对应的劣势&quot;">​</a></h3><ul><li><p>数据库 独立耗费资源</p></li><li><p>没有实现全链路自动扩展(数据库和带宽)</p></li><li><p>阿里云自己做的也很艰难(比如java的冷启动</p></li></ul><h3 id="intel-硬件拥抱k8s-可以操纵3级缓存etc" tabindex="-1">intel 硬件拥抱k8s(可以操纵3级缓存etc...) <a class="header-anchor" href="#intel-硬件拥抱k8s-可以操纵3级缓存etc" aria-label="Permalink to &quot;intel 硬件拥抱k8s(可以操纵3级缓存etc...)&quot;">​</a></h3>',27)]))}const _=a(h,[["render",p]]);export{q as __pageData,_ as default};
